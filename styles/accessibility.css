/* Accessibility-focused CSS */

/* Screen reader only content */
.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}

/* Show screen reader content when focused */
.sr-only:focus,
.sr-only:active {
  position: static;
  width: auto;
  height: auto;
  padding: inherit;
  margin: inherit;
  overflow: visible;
  clip: auto;
  white-space: normal;
}

/* Focus indicators */
.focus-visible:focus-visible {
  outline: 2px solid hsl(var(--primary));
  outline-offset: 2px;
}

/* High contrast mode support */
@media (prefers-contrast: high) {
  .contrast-more\:border-2 {
    border-width: 2px;
  }
  
  .contrast-more\:border-current {
    border-color: currentColor;
  }
  
  /* Ensure sufficient contrast for interactive elements */
  button, 
  a, 
  input, 
  select, 
  textarea {
    border: 1px solid currentColor;
  }
  
  /* Make focus indicators more prominent */
  *:focus {
    outline: 3px solid currentColor;
    outline-offset: 2px;
  }
}

/* Reduced motion support */
@media (prefers-reduced-motion: reduce) {
  *,
  *::before,
  *::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
  
  /* Keep essential animations for functionality */
  .loading-spinner,
  .progress-indicator {
    animation-duration: 1s !important;
  }
}

/* Skip links styling */
.skip-links {
  position: fixed;
  top: 0;
  left: 0;
  z-index: 9999;
  transform: translateY(-100%);
  transition: transform 0.3s ease-in-out;
}

.skip-links:focus-within {
  transform: translateY(0);
}

/* Ensure minimum touch target size */
@media (pointer: coarse) {
  button,
  a,
  input[type="button"],
  input[type="submit"],
  input[type="reset"],
  input[type="checkbox"],
  input[type="radio"],
  select {
    min-height: 44px;
    min-width: 44px;
  }
}

/* Print accessibility */
@media print {
  /* Ensure links are visible in print */
  a[href]:after {
    content: " (" attr(href) ")";
    font-size: 0.8em;
    color: #666;
  }
  
  /* Hide decorative elements */
  .print-hidden,
  nav,
  .floating-nav,
  .accessibility-tester {
    display: none !important;
  }
  
  /* Ensure good contrast for print */
  * {
    background: white !important;
    color: black !important;
  }
}

/* Windows High Contrast Mode */
@media screen and (-ms-high-contrast: active) {
  /* Ensure borders are visible */
  button,
  input,
  select,
  textarea {
    border: 1px solid;
  }
  
  /* Make focus indicators visible */
  *:focus {
    outline: 2px solid;
  }
}

/* Forced colors mode (Windows High Contrast) */
@media (forced-colors: active) {
  /* Use system colors */
  .forced-colors\:bg-canvas {
    background-color: Canvas;
  }
  
  .forced-colors\:text-canvastext {
    color: CanvasText;
  }
  
  .forced-colors\:border-canvastext {
    border-color: CanvasText;
  }
  
  /* Ensure interactive elements are distinguishable */
  button,
  a {
    forced-color-adjust: none;
    background-color: ButtonFace;
    color: ButtonText;
    border: 1px solid ButtonText;
  }
  
  button:hover,
  a:hover {
    background-color: Highlight;
    color: HighlightText;
  }
}

/* Focus management */
.focus-trap {
  position: relative;
}

.focus-trap::before,
.focus-trap::after {
  content: '';
  position: absolute;
  width: 1px;
  height: 1px;
  opacity: 0;
  pointer-events: none;
}

/* Keyboard navigation indicators */
.keyboard-nav-active *:focus {
  outline: 2px solid hsl(var(--primary));
  outline-offset: 2px;
}

/* Ensure text remains readable at 200% zoom */
@media (min-resolution: 2dppx) {
  body {
    font-size: 16px;
    line-height: 1.5;
  }
}

/* Color-only information alternatives */
.color-indicator::before {
  content: attr(data-label);
  position: absolute;
  left: -9999px;
  width: 1px;
  height: 1px;
  overflow: hidden;
}

/* Ensure sufficient spacing for readability */
p, li, td, th {
  line-height: 1.5;
}

h1, h2, h3, h4, h5, h6 {
  line-height: 1.3;
}

/* Make sure interactive elements are distinguishable */
button:not(:disabled),
a,
input:not(:disabled),
select:not(:disabled),
textarea:not(:disabled) {
  cursor: pointer;
}

button:disabled,
input:disabled,
select:disabled,
textarea:disabled {
  cursor: not-allowed;
  opacity: 0.6;
}

/* Ensure form elements have visible boundaries */
input,
select,
textarea {
  border: 1px solid hsl(var(--border));
  border-radius: 4px;
  padding: 8px 12px;
}

input:focus,
select:focus,
textarea:focus {
  border-color: hsl(var(--primary));
  box-shadow: 0 0 0 2px hsl(var(--primary) / 0.2);
}

/* Error states */
.error,
[aria-invalid="true"] {
  border-color: hsl(var(--destructive));
}

.error:focus,
[aria-invalid="true"]:focus {
  box-shadow: 0 0 0 2px hsl(var(--destructive) / 0.2);
}

/* Success states */
.success,
[aria-invalid="false"] {
  border-color: hsl(var(--success, 142 76% 36%));
}

/* Loading states */
.loading {
  position: relative;
  pointer-events: none;
}

.loading::after {
  content: '';
  position: absolute;
  top: 50%;
  left: 50%;
  width: 20px;
  height: 20px;
  margin: -10px 0 0 -10px;
  border: 2px solid transparent;
  border-top: 2px solid currentColor;
  border-radius: 50%;
  animation: spin 1s linear infinite;
}

@keyframes spin {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}

/* Ensure adequate spacing between interactive elements */
button + button,
a + a,
input + input {
  margin-left: 8px;
}

/* Stack interactive elements on small screens */
@media (max-width: 640px) {
  .button-group {
    flex-direction: column;
    gap: 8px;
  }
  
  .button-group button,
  .button-group a {
    width: 100%;
    margin: 0;
  }
}